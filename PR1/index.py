import telebot
from telebot import types
import random
import sqlite3
# Token –¥–ª—è –ø—Ä–∏–≤ º—è–∑–∫–∏ –¥–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
TOKEN = '7923883606:AAH9We_31SgEgKfavvbyJ9CgO6gYYt8u1a0'
bot = telebot.TeleBot(TOKEN)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è SQLite
conn = sqlite3.connect('PR1/repair_orders.db', check_same_thread=False)
cursor = conn.cursor()

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö, —è–∫—â–æ —Ç–∞–∫–æ—ó —â–µ –Ω–µ–º–∞—î
cursor.execute('''
CREATE TABLE IF NOT EXISTS orders (
    order_id TEXT PRIMARY KEY,
    name TEXT,
    phone TEXT,
    phone_model TEXT,
    problem_description TEXT,
    status TEXT
)
''')
conn.commit()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
def add_order(order_id, name, phone, phone_model, problem_description, status):
    cursor.execute('''
    INSERT INTO orders (order_id, name, phone, phone_model, problem_description, status)
    VALUES (?, ?, ?, ?, ?, ?)
    ''', (order_id, name, phone, phone_model, problem_description, status))
    conn.commit()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
def get_order_status(order_id):
    cursor.execute('SELECT * FROM orders WHERE order_id = ?', (order_id,))
    return cursor.fetchone()

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start, —è–∫–∞ –≤–∏–∫–ª–∏–∫–∞—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥", "–ó–∞–ø–∏—Å –Ω–∞ —Ä–µ–º–æ–Ω—Ç", "–°—Ç–∞—Ç—É—Å —Ä–µ–º–æ–Ω—Ç—É", "–ü—Ä–æ –Ω–∞—Å", "–ö–æ–Ω—Ç–∞–∫—Ç–∏ —Ç–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è")
    bot.send_photo(message.chat.id, photo=open('PR1/photos/1.jpg', 'rb'))
    welcome_text = (
        "–í—ñ—Ç–∞—î–º–æ –≤–∞—Å —É –Ω–∞—à—ñ–π –º–∞–π—Å—Ç–µ—Ä–Ω—ñ –∑ —Ä–µ–º–æ–Ω—Ç—É —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤! üì±\n\n"
        "–ú–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ—Å—è –Ω–∞ —à–≤–∏–¥–∫–æ–º—É —Ç–∞ —è–∫—ñ—Å–Ω–æ–º—É —Ä–µ–º–æ–Ω—Ç—ñ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —Ä—ñ–∑–Ω–∏—Ö –±—Ä–µ–Ω–¥—ñ–≤ —ñ –º–æ–¥–µ–ª–µ–π. "
        "–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑ –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏—Ö –º–∞–π—Å—Ç—Ä—ñ–≤, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å —Å—É—á–∞—Å–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ —Ç–∞ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω—ñ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏. "
        "–ú–∏ —Ä–æ–∑—É–º—ñ—î–º–æ, –Ω–∞—Å–∫—ñ–ª—å–∫–∏ –≤–∞–∂–ª–∏–≤–∏–π –≤–∞—à –ø—Ä–∏—Å—Ç—Ä—ñ–π, —Ç–æ–º—É –¥–æ–∫–ª–∞–¥–∞—î–º–æ –≤—Å—ñ—Ö –∑—É—Å–∏–ª—å –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ —ñ –Ω–∞–¥—ñ–π–Ω–æ–≥–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –π–æ–≥–æ –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–æ—Å—Ç—ñ.\n\n"
        "üíº –ß–æ–º—É –æ–±–∏—Ä–∞—é—Ç—å –Ω–∞—Å?\n"
        "- –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–æ—á–Ω–æ—ó –ø—Ä–∏—á–∏–Ω–∏ –ø–æ–ª–æ–º–∫–∏\n"
        "- –ì–∞—Ä–∞–Ω—Ç—ñ—è –Ω–∞ –≤—Å—ñ –≤–∏–¥–∏ —Ä–µ–º–æ–Ω—Ç–Ω–∏—Ö —Ä–æ–±—ñ—Ç\n"
        "- –ü—Ä–æ–∑–æ—Ä–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ—Å–ª—É–≥ –±–µ–∑ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏—Ö –ø–ª–∞—Ç–µ–∂—ñ–≤\n"
        "- –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –∫–æ–∂–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞\n\n"
        "–î–ª—è –ø–æ—á–∞—Ç–∫—É –≤–∏–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ, —ñ –º–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –≤–∞–º –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –≤–∞—à –ø—Ä–∏—Å—Ç—Ä—ñ–π –¥–æ –∂–∏—Ç—Ç—è! üòä"
    )

    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)
# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –∑–∞–ø–∏—Å—É –Ω–∞ —Ä–µ–º–æ–Ω—Ç
@bot.message_handler(commands=['book'])
def book(message):
    request_user_info(message)
# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É —Ä–µ–º–æ–Ω—Ç—É
@bot.message_handler(commands=['status'])
def status(message):
    get_status(message)
# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ—Å–ª—É–≥
@bot.message_handler(commands=['categories'])
def categories(message):
    get_categories(message)
# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –º–∞–π—Å—Ç–µ—Ä–Ω—é
@bot.message_handler(commands=['about'])
def about(message):
    get_about(message)
# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
@bot.message_handler(commands=['contacts'])
def contacts(message):
    get_contacts(message)
# –û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∫–Ω–æ–ø–æ–∫ –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –µ–∫—Ä–∞–Ω—ñ
@bot.message_handler(content_types=['text'])
def handle_text(message):
    if message.text == "–ü—Ä–æ –Ω–∞—Å":
        get_about(message)
    elif message.text == "–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥":
        get_categories(message)

    elif message.text == "–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è", callback_data='register_diagnostics'))
        bot.send_message(
            message.chat.id,
            "üîç **–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞**\n\n"
            "–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–æ–∑–≤–æ–ª—è—î —Ç–æ—á–Ω–æ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –ø—Ä–∏—á–∏–Ω—É –Ω–µ—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—ñ –≤–∞—à–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É. "
            "–ù–∞—à—ñ —Ñ–∞—Ö—ñ–≤—Ü—ñ —à–≤–∏–¥–∫–æ –ø—Ä–æ–≤–µ–¥—É—Ç—å –æ–≥–ª—è–¥ –ø—Ä–∏—Å—Ç—Ä–æ—é —Ç–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É—é—Ç—å –Ω–∞–π–∫—Ä–∞—â–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏.",
            reply_markup=markup,
            parse_mode="Markdown"
        )

    elif message.text == "–ó–∞–º—ñ–Ω–∞ –µ–∫—Ä–∞–Ω–∞":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è", callback_data='register_screen_replacement'))
        bot.send_message(
            message.chat.id,
            "üì± **–ó–∞–º—ñ–Ω–∞ –µ–∫—Ä–∞–Ω–∞**\n\n"
            "–ú–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –∑–∞–º—ñ–Ω—É –µ–∫—Ä–∞–Ω—ñ–≤ –¥–ª—è –±—ñ–ª—å—à–æ—Å—Ç—ñ –º–æ–¥–µ–ª–µ–π —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ç—ñ–ª—å–∫–∏ —è–∫—ñ—Å–Ω—ñ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏. "
            "–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –∑–∞–π–º–∞—î –≤—ñ–¥ 1 –¥–æ 3 –≥–æ–¥–∏–Ω –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –º–æ–¥–µ–ª—ñ.",
            reply_markup=markup,
            parse_mode="Markdown"
        )

    elif message.text == "–ó–∞–º—ñ–Ω–∞ –±–∞—Ç–∞—Ä–µ—ó":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è", callback_data='register_battery_replacement'))
        bot.send_message(
            message.chat.id,
            "üîã **–ó–∞–º—ñ–Ω–∞ –±–∞—Ç–∞—Ä–µ—ó**\n\n"
            "–®–≤–∏–¥–∫–æ —Ä–æ–∑—Ä—è–¥–∂–∞—î—Ç—å—Å—è —Ç–µ–ª–µ—Ñ–æ–Ω? –ú–∏ –∑–∞–º—ñ–Ω–∏–º–æ –±–∞—Ç–∞—Ä–µ—é –Ω–∞ –Ω–æ–≤—É, —â–æ–± –≤–∞—à –ø—Ä–∏—Å—Ç—Ä—ñ–π –ø—Ä–∞—Ü—é–≤–∞–≤ –¥–æ–≤—à–µ. "
            "–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –∑–∞–º—ñ–Ω–∏ - –¥–æ 1 –≥–æ–¥–∏–Ω–∏.",
            reply_markup=markup,
            parse_mode="Markdown"
        )

    elif message.text == "–†–µ–º–æ–Ω—Ç —Ä–æ–∑'—î–º—É –∑–∞—Ä—è–¥–∫–∏":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è", callback_data='register_charging_port_repair'))
        bot.send_message(
            message.chat.id,
            "üîå **–†–µ–º–æ–Ω—Ç —Ä–æ–∑'—î–º—É –∑–∞—Ä—è–¥–∫–∏**\n\n"
            "–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–µ –∑–∞—Ä—è–¥–∂–∞—î—Ç—å—Å—è –Ω–∞–ª–µ–∂–Ω–∏–º —á–∏–Ω–æ–º? –ú–∏ –≤–∏–ø—Ä–∞–≤–∏–º–æ –∞–±–æ –∑–∞–º—ñ–Ω–∏–º–æ —Ä–æ–∑'—î–º –∑–∞—Ä—è–¥–∫–∏, "
            "—â–æ–± –≤–∞—à –ø—Ä–∏—Å—Ç—Ä—ñ–π –ø—Ä–∞—Ü—é–≤–∞–≤ —è–∫ –Ω–æ–≤–∏–π.",
            reply_markup=markup,
            parse_mode="Markdown"
        )

    elif message.text == "–Ü–Ω—à–∞ –ø–æ–ª–æ–º–∫–∞":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è", callback_data='register_other_issue'))
        bot.send_message(
            message.chat.id,
            "üìû **–Ü–Ω—à–∞ –ø–æ–ª–æ–º–∫–∞**\n\n"
            "–Ø–∫—â–æ —É –≤–∞—Å —ñ–Ω—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ –∑ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–∞–º –æ–ø–∏—Å, —ñ –º–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –∑–Ω–∞–π—Ç–∏ –Ω–∞–π–∫—Ä–∞—â–µ —Ä—ñ—à–µ–Ω–Ω—è.",
            reply_markup=markup,
            parse_mode="Markdown"
        )

    elif message.text == "–ó–∞–ø–∏—Å –Ω–∞ —Ä–µ–º–æ–Ω—Ç":
        request_user_info(message)

    elif message.text == "–ö–æ–Ω—Ç–∞–∫—Ç–∏ —Ç–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è":
        get_contacts(message)

    elif message.text == "–°—Ç–∞—Ç—É—Å —Ä–µ–º–æ–Ω—Ç—É":
        get_status(message)

    elif message.text == "–ù–∞–∑–∞–¥":
        main_menu(message)

    elif message.text.isdigit():
        # –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        order_info = get_order_status(message.text)
        if order_info:
            response = f"–°—Ç–∞—Ç—É—Å –≤–∞—à–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {order_info[5]}"
        else:
            response = "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–æ–º–µ—Ä —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."

        bot.send_message(message.chat.id, response)
    else:
        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –∑ –º–µ–Ω—é.")
# –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥", "–ó–∞–ø–∏—Å –Ω–∞ —Ä–µ–º–æ–Ω—Ç", "–°—Ç–∞—Ç—É—Å —Ä–µ–º–æ–Ω—Ç—É", "–ü—Ä–æ –Ω–∞—Å", "–ö–æ–Ω—Ç–∞–∫—Ç–∏ —Ç–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è")
    bot.send_message(
        message.chat.id,
        "–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é. –û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è:",
        reply_markup=markup
    )
# –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø–æ –≤–∏–±—Ä–∞–Ω–æ–º—É —Ç–∏–ø—É —Ä–µ–º–æ–Ω—Ç—É
@bot.callback_query_handler(func=lambda call: call.data in ['diagnostics', 'screen_replacement', 'battery_replacement', 'charging_port_repair', 'other_issue'])
def category_info(call):
    if call.data == 'diagnostics':
        description = "üîç **–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞**\n\n–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–æ–∑–≤–æ–ª—è—î —Ç–æ—á–Ω–æ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –ø—Ä–∏—á–∏–Ω—É –Ω–µ—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—ñ –≤–∞—à–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É. –ù–∞—à—ñ —Ñ–∞—Ö—ñ–≤—Ü—ñ —à–≤–∏–¥–∫–æ –ø—Ä–æ–≤–µ–¥—É—Ç—å –æ–≥–ª—è–¥ –ø—Ä–∏—Å—Ç—Ä–æ—é —Ç–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É—é—Ç—å –Ω–∞–π–∫—Ä–∞—â–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏."
    elif call.data == 'screen_replacement':
        description = "üì± **–ó–∞–º—ñ–Ω–∞ –µ–∫—Ä–∞–Ω–∞**\n\n–ú–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –∑–∞–º—ñ–Ω—É –µ–∫—Ä–∞–Ω—ñ–≤ –¥–ª—è –±—ñ–ª—å—à–æ—Å—Ç—ñ –º–æ–¥–µ–ª–µ–π —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ç—ñ–ª—å–∫–∏ —è–∫—ñ—Å–Ω—ñ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏. –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –∑–∞–π–º–∞—î –≤—ñ–¥ 1 –¥–æ 3 –≥–æ–¥–∏–Ω –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –º–æ–¥–µ–ª—ñ."
    elif call.data == 'battery_replacement':
        description = "üîã **–ó–∞–º—ñ–Ω–∞ –±–∞—Ç–∞—Ä–µ—ó**\n\n–®–≤–∏–¥–∫–æ —Ä–æ–∑—Ä—è–¥–∂–∞—î—Ç—å—Å—è —Ç–µ–ª–µ—Ñ–æ–Ω? –ú–∏ –∑–∞–º—ñ–Ω–∏–º–æ –±–∞—Ç–∞—Ä–µ—é –Ω–∞ –Ω–æ–≤—É, —â–æ–± –≤–∞—à –ø—Ä–∏—Å—Ç—Ä—ñ–π –ø—Ä–∞—Ü—é–≤–∞–≤ –¥–æ–≤—à–µ. –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –∑–∞–º—ñ–Ω–∏ - –¥–æ 1 –≥–æ–¥–∏–Ω–∏."
    elif call.data == 'charging_port_repair':
        description = "üîå **–†–µ–º–æ–Ω—Ç —Ä–æ–∑'—î–º—É –∑–∞—Ä—è–¥–∫–∏**\n\n–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–µ –∑–∞—Ä—è–¥–∂–∞—î—Ç—å—Å—è –Ω–∞–ª–µ–∂–Ω–∏–º —á–∏–Ω–æ–º? –ú–∏ –≤–∏–ø—Ä–∞–≤–∏–º–æ –∞–±–æ –∑–∞–º—ñ–Ω–∏–º–æ —Ä–æ–∑'—î–º –∑–∞—Ä—è–¥–∫–∏, —â–æ–± –≤–∞—à –ø—Ä–∏—Å—Ç—Ä—ñ–π –ø—Ä–∞—Ü—é–≤–∞–≤ —è–∫ –Ω–æ–≤–∏–π."
    elif call.data == 'other_issue':
        description = "üìû **–Ü–Ω—à–∞ –ø–æ–ª–æ–º–∫–∞**\n\n–Ø–∫—â–æ —É –≤–∞—Å —ñ–Ω—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ –∑ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–∞–º –æ–ø–∏—Å, —ñ –º–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –∑–Ω–∞–π—Ç–∏ –Ω–∞–π–∫—Ä–∞—â–µ —Ä—ñ—à–µ–Ω–Ω—è."

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è", callback_data='register_' + call.data))

    bot.send_message(
        call.message.chat.id,
        description,
        reply_markup=markup,
        parse_mode="Markdown"
    )
# –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
@bot.callback_query_handler(func=lambda call: call.data.startswith('register_'))
def register(call):
    request_user_info(call.message)
# –ó–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∑–∞–ø–∏—Å—É
def request_user_info(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ù–∞–∑–∞–¥")
    bot.send_message(
        message.chat.id,
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –∑–∞–ø–∏—Å—É:\n- –í–∞—à–µ —ñ–º'—è\n- –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É\n- –ú–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω—É\n- –û–ø–∏—Å –ø—Ä–æ–±–ª–µ–º–∏",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, process_order)
# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
def get_status(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ù–∞–∑–∞–¥")
    bot.send_message(
        message.chat.id,
        "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –≤–∞—à–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É —Ä–µ–º–æ–Ω—Ç—É:",
        reply_markup=markup
    )
# –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –º–∞–π—Å—Ç–µ—Ä–Ω—é
def get_about(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ù–∞–∑–∞–¥")
    bot.send_photo(message.chat.id, photo=open('PR1/photos/2.png', 'rb'))
    bot.send_message(
        message.chat.id,
        "–ú–∏ - –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –º–∞–π—Å—Ç–µ—Ä–Ω—è –∑ —Ä–µ–º–æ–Ω—Ç—É —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –∑ –±–∞–≥–∞—Ç–æ—Ä—ñ—á–Ω–∏–º –¥–æ—Å–≤—ñ–¥–æ–º —Ä–æ–±–æ—Ç–∏. "
        "–ü—Ä–æ–ø–æ–Ω—É—î–º–æ —à–≤–∏–¥–∫–∏–π —Ç–∞ —è–∫—ñ—Å–Ω–∏–π —Ä–µ–º–æ–Ω—Ç —Ä—ñ–∑–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤. "
        "–ù–∞—à–∞ –º–µ—Ç–∞ - –∑—Ä–æ–±–∏—Ç–∏ –≤–∞—à –ø—Ä–∏—Å—Ç—Ä—ñ–π –∑–Ω–æ–≤—É —è–∫ –Ω–æ–≤–∏–π!",
        reply_markup=markup
    )
# –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
def get_contacts(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ù–∞–∑–∞–¥")
    bot.send_message(
        message.chat.id,
        "–ù–∞—à–∞ –º–∞–π—Å—Ç–µ—Ä–Ω—è –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –∑–∞ –∞–¥—Ä–µ—Å–æ—é: –ø—Ä–æ—Å–ø–µ–∫—Ç –°—Ç–µ–ø–∞–Ω–∞ –ë–∞–Ω–¥–µ—Ä–∏, 4, –ö–∏—ó–≤.\n"
        "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏: –ü–Ω-–ü—Ç –∑ 9:00 –¥–æ 18:00.\n–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –¥–æ–≤—ñ–¥–æ–∫: +380123456789",
        reply_markup=markup
    )
# –í—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ä–µ–º–æ–Ω—Ç—É
def get_categories(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", callback_data='diagnostics'))
    markup.add(types.InlineKeyboardButton("–ó–∞–º—ñ–Ω–∞ –µ–∫—Ä–∞–Ω–∞", callback_data='screen_replacement'))
    markup.add(types.InlineKeyboardButton("–ó–∞–º—ñ–Ω–∞ –±–∞—Ç–∞—Ä–µ—ó", callback_data='battery_replacement'))
    markup.add(types.InlineKeyboardButton("–†–µ–º–æ–Ω—Ç —Ä–æ–∑'—î–º—É –∑–∞—Ä—è–¥–∫–∏", callback_data='charging_port_repair'))
    markup.add(types.InlineKeyboardButton("–Ü–Ω—à–∞ –ø–æ–ª–æ–º–∫–∞", callback_data='other_issue'))

    back_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_markup.add("–ù–∞–∑–∞–¥")

    bot.send_message(
        message.chat.id,
        "–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —Ç–∞ –∑–∞–ø–∏—Å—É:",
        reply_markup=markup
    )
    bot.send_message(
        message.chat.id,
        "–î–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'",
        reply_markup=back_markup
    )
# –û–±—Ä–æ–±–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
def process_order(message):
    if message.text == "–ù–∞–∑–∞–¥":
        main_menu(message)
        return
    user_data = message.text.split('\n')
    if len(user_data) < 4:
        bot.send_message(
            message.chat.id,
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å, —â–æ –≤–∏ –Ω–∞–¥–∞–ª–∏ —ñ–º'—è, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, –º–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ç–∞ –æ–ø–∏—Å –ø—Ä–æ–±–ª–µ–º–∏."
        )
        return request_user_info(message)

    name = user_data[0]
    phone = user_data[1]
    phone_model = user_data[2]
    problem_description = user_data[3]
    status = "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ –Ω–∞ –æ–±—Ä–æ–±–∫—É. –û—á—ñ–∫—É–π—Ç–µ –ø–æ–¥–∞–ª—å—à–∏—Ö –æ–Ω–æ–≤–ª–µ–Ω—å."
    order_id = str(random.randint(10000, 99999))
    add_order(order_id, name, phone, phone_model, problem_description, status)
    bot.send_message(
        message.chat.id,
        f"–î—è–∫—É—î–º–æ –∑–∞ –∑–∞–ø–∏—Å! –í–∞—à –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {order_id}. –í–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å —É —Ä–æ–∑–¥—ñ–ª—ñ '–°—Ç–∞—Ç—É—Å —Ä–µ–º–æ–Ω—Ç—É'."
    )
# –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –±–æ—Ç—É
bot.polling(none_stop=True)
